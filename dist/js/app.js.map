{"version":3,"sources":["build-List.js","catchEmAll.js","get-image.js","image-observer.js","index.js","list-observer.js"],"names":["buildList","result","clone","template","content","cloneNode","querySelector","innerText","name","image","getImage","url","then","imageURL","dataset","src","imageObserver","observe","characterList","appendChild","catchEmAll","offset","fetch","res","json","data","count","results","forEach","lastChild","document","observer","sprites","front_default","IntersectionObserver","entries","intersectionRatio","unobserve","target","threshold"],"mappings":"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","file":"app.js","sourcesContent":["function buildList(result) {//data er den information, jeg har fetchet (check i konsolen), results er Array'et\n\n    let clone = template.content.cloneNode(true);//her laver jeg en klon\n    clone.querySelector(\".pokeName\").innerText = result.name;//her skal klonen sættes in i html'en\n                    \n    var image = clone.querySelector(\".characterImg\");\n                \n    getImage(result.url)\n        .then(function(imageURL) {\n            image.dataset.src = imageURL;\n            //console.log(imageURL);\n            imageObserver.observe(image);\n        })         \n        characterList.appendChild(clone)\n};","function catchEmAll(offset) {\n    fetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=10`)\n        .then(res => res.json())//andet måde at skrive det på: .then(function(response){return respnse.json()}\n            .then(function(data) {\n                count = data.count;\n                data.results.forEach(buildList)\n\n            var lastChild = document.querySelector(\".characterList li:last-child\");\n            observer.observe(lastChild);\n\n        });\n    };","function getImage(url){\n    return fetch(url)\n        .then(res => res.json())\n            .then(function(data) {\n                return data.sprites.front_default;\n            })//funktionen retunerer et promis, som retunerer billedet\n}","var imageObserver = new IntersectionObserver(function(entries) {\n    if (entries[0].intersectionRatio <= 0) return;\n    \n    observer.unobserve(entries[0].target);\n    entries[0].target.src = entries[0].target.dataset.src;\n}, {threshold: 1});","var offset = 0;\nvar count;\n\nvar template = document.querySelector(\"#template\");//id'en på min template            \nvar characterList = document.querySelector(\".characterList\");//class'en på min ul i section\n\ncatchEmAll(offset);\n","var observer = new IntersectionObserver(function(entries) {\n    //console.log(entries);\n    if (entries[0].intersectionRatio <= 0) return;\n    \n    observer.unobserve(entries[0].target);\n    offset = offset + 10;\n    \n    if (offset > count) return;\n    \n    catchEmAll(offset);\n\n}, {threshold: 1});"]}