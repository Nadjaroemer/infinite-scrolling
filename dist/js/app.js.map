{"version":3,"sources":["catchEmAll.js","get-image.js","image-observer.js","index.js","list-observer.js"],"names":["catchEmAll","offset","fetch","then","res","json","data","count","results","forEach","result","template","document","querySelector","characterList","clone","content","cloneNode","innerText","name","image","getImage","url","imageURL","dataset","src","imageObserver","observe","appendChild","lastChild","observer","sprites","front_default","IntersectionObserver","entries","intersectionRatio","unobserve","target","threshold"],"mappings":"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","file":"app.js","sourcesContent":["function catchEmAll(offset) {\n    fetch(`https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=10`)\n        .then(res => res.json())//andet måde at skrive det på: .then(function(response){return respnse.json()}\n            .then(function(data) {\n                count = data.count;\n                data.results.forEach(function(result) {//data er den information, jeg har fetchet (check i konsolen), results er Array'et \n                    //console.log(data);                    //forEach itereringsmetode til Arrayer\n                    //console.log(data.results);\n                    //console.log(result.url);\n\n                    let template = document.querySelector(\"#template\");//id'en på min template\n                    let characterList = document.querySelector(\".characterList\");//class'en på min ul i section\n\n                    let clone = template.content.cloneNode(true);//her laver jeg en klon\n                    clone.querySelector(\".pokeName\").innerText = result.name;//her skal klonen sættes in i html'en\n                    \n                    var image = clone.querySelector(\".characterImg\");\n                \n                    getImage(result.url)\n                        .then(function(imageURL) {\n                            image.dataset.src = imageURL;\n                            //console.log(imageURL);\n                            imageObserver.observe(image);\n                        })\n                    \n                    characterList.appendChild(clone)\n                });\n\n            var lastChild = document.querySelector(\".characterList li:last-child\");\n            observer.observe(lastChild);\n\n        });\n    };","function getImage(url){\n    return fetch(url)\n        .then(res => res.json())\n            .then(function(data) {\n                return data.sprites.front_default;\n            })//funktionen retunerer et promis, som retunerer billedet\n}","var imageObserver = new IntersectionObserver(function(entries) {\n    if (entries[0].intersectionRatio <= 0) return;\n    \n    observer.unobserve(entries[0].target);\n    entries[0].target.src = entries[0].target.dataset.src;\n}, {threshold: 1});","var offset = 0;\nvar count;\n\ncatchEmAll(offset);\n","var observer = new IntersectionObserver(function(entries) {\n    //console.log(entries);\n    if (entries[0].intersectionRatio <= 0) return;\n    \n    observer.unobserve(entries[0].target);\n    offset = offset + 10;\n    \n    if (offset > count) return;\n    \n    catchEmAll(offset);\n\n}, {threshold: 1});"]}